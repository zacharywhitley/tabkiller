name: CI

on:
  push:
    branches: [ main, develop, 'epic/*', 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run type-check
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  build:
    name: Build Extensions
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        browser: [chrome, firefox, safari, edge]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension for ${{ matrix.browser }}
      run: npm run build:${{ matrix.browser }}
      env:
        NODE_ENV: production
    
    - name: Upload ${{ matrix.browser }} build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tabkiller-${{ matrix.browser }}
        path: build/${{ matrix.browser }}/
        retention-days: 30
    
    - name: Validate extension manifest
      run: |
        if [ -f "build/${{ matrix.browser }}/manifest.json" ]; then
          echo "✓ Manifest file exists for ${{ matrix.browser }}"
          cat build/${{ matrix.browser }}/manifest.json | jq .
        else
          echo "✗ Manifest file missing for ${{ matrix.browser }}"
          exit 1
        fi

  package:
    name: Package Extensions
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download all build artifacts
      uses: actions/download-artifact@v3
      with:
        path: build/
    
    - name: Restore build directory structure
      run: |
        mkdir -p build/{chrome,firefox,safari,edge}
        if [ -d "build/tabkiller-chrome" ]; then mv build/tabkiller-chrome/* build/chrome/; fi
        if [ -d "build/tabkiller-firefox" ]; then mv build/tabkiller-firefox/* build/firefox/; fi
        if [ -d "build/tabkiller-safari" ]; then mv build/tabkiller-safari/* build/safari/; fi
        if [ -d "build/tabkiller-edge" ]; then mv build/tabkiller-edge/* build/edge/; fi
        rm -rf build/tabkiller-*
    
    - name: Create distribution packages
      run: |
        mkdir -p dist
        npm run zip:all
    
    - name: Upload packaged extensions
      uses: actions/upload-artifact@v3
      with:
        name: tabkiller-packages
        path: dist/
        retention-days: 90

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for known vulnerabilities
      run: npx npm-check-updates --doctor
      continue-on-error: true